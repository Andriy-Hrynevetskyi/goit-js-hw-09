{"mappings":"AAAA,IAAMA,KAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,eAAgBH,SAASC,cAAc,sBACvCG,YAAaJ,SAASC,cAAc,wBACpCI,UAAWL,SAASC,cAAc,0BAG9BK,SAAW,GAEjB,SAASC,cAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,SAAAA,EAAUC,MAAAA,IAEpBM,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,MAEpBA,MASP,SAASQ,cAAcC,GAGrB,OAFAZ,SAASY,EAAMC,OAAOC,OAASF,EAAMC,OAAOE,MAErCf,SAGT,SAASgB,aAAaJ,GACpBA,EAAMK,iBACN,IAAMC,EAAwBlB,SAAxBG,MAAOgB,EAAiBnB,SAAjBmB,OAAQC,EAASpB,SAAToB,KACrB,GAAIF,EAAQ,GAAKC,EAAS,GAAKC,EAAO,EACpC,IAAK,IAAIC,EAASH,EAAOG,GAAKF,EAAQE,GAAK,EAGzBpB,cAFDoB,EACfH,GAASE,GAENE,MAAK,SAAAC,OAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAK,uBAAuCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAE3DwB,OAAM,SAAAJ,OAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,QAAQC,IAAK,sBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,eAI7DyB,MAAM,wBAzBVpC,KAAKC,KAAKoC,iBAAiB,SAAUb,cACrCxB,KAAKC,KAAKoC,iBAAiB,QAASlB","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  delayStepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst formData = {};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('input', onInputChange);\n\nfunction onInputChange(event) {\n  formData[event.target.name] = +event.target.value;\n\n  return formData;\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let { delay, amount, step } = formData;\n  if (delay > 0 && amount > 0 && step > 0) {\n    for (let i = 1 && delay; i <= amount; i += 1) {\n      let position = i;\n      delay += step;\n      const promise = createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  } else {\n    alert('Enter values > 0 !!!');\n  }\n}\n"],"names":["refs","form","document","querySelector","delayInput","delayStepInput","amountInput","submitBtn","formData","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","onInputChange","event","target","name","value","onFormSubmit","preventDefault","delay1","amount","step","i","then","param","console","log","concat","catch","alert","addEventListener"],"version":3,"file":"03-promises.6d5ee612.js.map"}